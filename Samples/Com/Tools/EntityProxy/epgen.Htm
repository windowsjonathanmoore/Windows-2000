<HTML>
<HEAD>
<TITLE>The EPGen Tool</TITLE>

<link rel="stylesheet" href="../../styles.css" type="text/css">

<style>
A:link {color: Olive}
A:visited {color: 336666}
A:hover {background:Olive; color: White}
UL { list-style-image:"url('../images/BLACKARROW.GIF')"}
</style>

</HEAD>
<BODY>

<H2>The EPGen Tool</H2>

<P>The EPGen tool is used to generate template stored procedures for SQL Server 7.0, and Visual Basic 6.0 functions for creating blank entities with valid meta-data (useful for those "AddNew" situations where a              database communication to simply create an empty entity would be wasteful of server resources). The stored procedures are then used by the Entity Proxy Data Services components to communicate with the database.</P>
<P>Build the DataServices sample according to the <A 
  href="EntityProxy.htm">instructions</A>. </P>
<OL>
  <LI>         
  Open the EPGen.vbp project in Visual Basic 6.0. 
  
	<LI>Build the application.
  
	<LI>Run the application
  <LI>Enter the datasource that maps to the database that you require access to.
  <LI>Select the table that stored procedures are to be generated for.
  <LI>Select the field that represents the primary key for that table.
  <LI>Click the "Generate" button - the code generated will be placed into the 
  two panes within the application.</LI>                  
</OL>          

<P><A name=Remarks><STRONG>Remarks</STRONG></A></P>
<P>The stored procedures and Visual Basic code generated by the EPGen tool can 
be used as is, though it is very likely that they will form the basis of more 
complex logic. For example it is unlikely that a full scale system will be able 
to map a single table directly to a single entity, in the business sense.</P>
<P>EPGen uses ADOX to query the schema of the database and 
tables.</P>

</BODY>
</HTML>

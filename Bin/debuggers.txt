	    Microsoft(R) Windows NT/2000(R) Debugging Tools
                          Release Notes

-----------------------------------------------------------------------------

Contents

    Overview
    What's New
    Known Issues
    Programs
    Debugger Extensions
    Install Directory and Start Menus
    Operating System and Version-Specific Information
    Debugger Documentation
    Oem support Tools
    More Information
    Feedback

-----------------------------------------------------------------------------

Overview

The Microsoft(R) Windows NT/2000(R) Debugging Tools are a set of tools
provided by the Windows 2000 Debug team.  This includes debuggers, OEM
Support Tools, and other related tools. The Debugging Tools are available
in each of these products:

 - Platform SDK (MSDN CD and web site)
 - Windows 2000 DDK (MSDN CD and web site)
 - Windows 2000 Customer Support Diagnostics CD

The Windows 2000 Customer Support Diagnostics CD contains the IIS
Exception Monitor Tool in addition to the Debugging Tools.  This tool is
provided by the Microsoft Product Support team.

Note: The Debugging Tools are intended to be used by application developers,
driver developers, and administrators.  Also, debugging requires using a
user account with Administrive rights.  If you are not familiar with debugging,
experimentation can crash processes, and the the operating system. Only
experienced users and developers should debug.

-----------------------------------------------------------------------------

What's New

- Most changes from the last Windows 2000 Release Candidate are bugfixes,
to increase debugger stability.

- KD now has limited user-mode crash dump (user.dmp) support.  Currently 
it only works with the current thread, not other threads.  Use Windbg's 
user-mode crash dump support if there are problems in this initial KD 
user.dmp support.  

- The debuggers now handle 64-bit debugging, both in terms of kernel wire
protocol and the extension dll interface.  You must use current debuggers
to debug Windows 2000.  The older release candidates are incompatible.
32-bit extension DLLs should still work; if you see problems with 32-bit
extension DLLs using the new debuggers, please report it to Microsoft 
Product Support.

-----------------------------------------------------------------------------

Known Issues

- Uninstallation of the debugger tools is not working in this release.
The version that installs for MSDN CD version for the Platform SDK and
DDK will uninstall.

- If there are multiple versions of debugger extension DLLs in your PATH,
older verions might incorrectly get loaded.  There have been some
improvements in the area of debugger extension DLLs which make this kind
of problem more common, in some situations.  See below for more
information. Use the !listexts to find out where it was loaded from.

- Win64 widening of debugger extension DLL source code has occurred for
Windows 2000. Developers who have debugger extensions should make
modifications to their source code to widen from Win32 to Win64.  See the
Platform SDK and DDK for details.

-----------------------------------------------------------------------------

Programs

This distribution includes the following debuggers:

    windbg.exe   - Windbg debugger
    windbgrm.exe - Windbg Remote
    alphakd.exe  - Kernel Debugger for Alpha systems
    i386kd.exe   - Kernel Debugger for x86 systems
    cdb.exe      - CDB Debugger (variant of NTSD)

On Windows 2000, ntsd.exe ships with the operating system, in
%systemroot%\system32 and is intended to only be used with the system it is
shipped with.  It is not included in this distribution.

This distribution also includes these debugger-related tools:

    gflags.exe   - Global Flags utility
    dumpchk.exe  - Dump Check utility
    breakin.exe  - BreakIn utility
    remote.exe   - Remote utility
    kill.exe     - Process Kill utility
    list.exe     - File List utility

Another related tool which ships with the operating system is:

    drwtsn32.exe - Dr. Watson utility

-----------------------------------------------------------------------------

Debugger Extensions

Debugger Extensions are DLLs which Windbg, NTSD, and KD can use to provide
additional debugger commands.  The following extensions are included with
this release:

    gdikdx.dll
    kdextalp.dll
    kdextx86.dll
    ntsdexts.dll
    rpcexts.dll
    userexts.dll
    userkdx.dll
    vdmexts.dll

The debugger extension DLLs are operating system version, build,
and debug/retail specific.  Multiple versions of each DLL are included, to
provide the necessary files for each variant. All DLLs are provided in both
debug and retail versions.  The debug and retail versions of these DLLs for
Windows NT 4.0 and this build of Windows 2000 are installed into four
subdirectories, under the target subdirectory:

    nt4chk
    nt4fre
    w2kchk
    w2kfre
    
The debugger has awareness of these subdirectories, and will not be able
to find them if these subdirectories are renamed or moved. If a custom
extension DLL is to be used, it should be placed in the PATH. Refer to
the debugger documentation for more details.

For Windows 2000, ntsdexts.dll ships with the operating system, in
%systemroot%\system32, and is not included in this distribution.

For NTSD/KD, they search for debugger extension DLLs in the following places:

    %NT_DEBUGGER_EXTENSION_PATH%;
       %DIRECTORY_FROM_WHICH_KDNTSD_IS_LAUNCHED%\%TARGET_PLATFORM%;
       %DIRECTORY_FROM_WHICH_KDNTSD_IS_LAUNCHED%;
       %Path% 
       
where TARGET_PLATFORM is [nt4fre| nt4chk| w2kfre| w2kchk].

Use the "version" command in KD/NTSD to see what the extension searth 
path, to note where extension DLLs are loaded from.  

For Windbg, the method used to search for debugger extension DLLs is:

1. Search the current directory which the debugger was loaded from.
2. Search the PATH environment variable.
3. Look at the registry key, which is set when the debugger is installed.
   Look at the subdirectory listed in
   "HKCU\Software\Microsoft\W2KDBG\Directories\Install Dir" (the W2KDBG
   version is only for certain versions.  The DDK version may have
   a different key). If C:\FOO, then the debugger looks in C:\FOO\nt4fre,
   C:\FOO\nt4chk, C:\FOO\w2kfre, and C:\FOO\w2kchk, based on the appropriate
   OS version (4 or 5) and type (free or checked).
   
-----------------------------------------------------------------------------

Install Directory and Start Menus

Depending on which kit was installed, the subdirectory in which these tools
are installed varies. Using the Setup program from each kit, the
subdirectory can be specified. For all installations of the Debugging Tools,
the location for the files is in the "bin" subdirectory of the specified
installation directory.

Similarly, the Start menu for these tools will vary based on which kit they
are installed from. This path works for all distributions except the DDK:

    Start -> Programs -> Debugging Tools

This path works for the Windows 2000 DDK:

    Start -> Programs -> Development Kits -> Windows 2000 DDK -> Debugging Tools

Installing the debuggers requires an account with administrative 
permission, to install the debugger.  Once installed, non-administrators 
should be able to use the debugger (though this is not a tested scenerio 
at this point in time).  

-----------------------------------------------------------------------------

Operating System and Version-Specific Information

The Kernel debugger (KD), Windbg and the CDB debugger have been updated to debug
Windows NT 4.0 and Windows 2000. Both operating systems can be debugged
by running the Windows 2000 debuggers on either a Windows NT 4.0 or Windows
2000 machine.

The Windows 2000 Windbg can debug Win32 user-mode applications on Windows NT 4.0.
However, some Win32 user-mode dumps from Windows NT 4.0 Service Pack 5 may be
undebuggable. Please test the memory dump using DumpChk before attempting to
debug it.

To debug a Windows NT 4.0 system using NTSD, use the version of NTSD that 
ships in the \support subdirectory in the Windows NT 4.0 CD.  To debug a 
Windows NT 4.0 system using KD, use either the version of KD that ships in 
the \support subdirectory or the Windows 2000 KD.  In addition to the 
debugger extensions provided in the \support directory, this current 
debugger distribution includes more extensions (including checked 
versions) in the nt4chk and nt4fre subdirectories.  

Both KD and CDB are not designed to be used on Microsoft Windows 95 or 
Microsoft Windows 98.  Windbg cannot be used to debug kernel-mode drivers 
on Windows 95 and Windows 98.  Instead, the WDeb debugger (which ships in 
the Windows 9x DDK) should be used for this.  Windbg can be used for 
simple (one-system) debugging scenerios of Win32 user-mode applications on 
Microsoft Windows 95 or Microsoft Windows 98.  

-----------------------------------------------------------------------------

Debugger Documentation

For documentation on how to use these debuggers and related tools, see the
online help debug.chm. This is a new document with new debugger-related
documentation.

In addition to this new documentation, there is other debugger 
documentation available.  See the Windbg online help (windbg.hlp), and the 
debugger online help (debugger.hlp).  Also, see the debugging chapters of 
the various kits, which discuss debugging for different target audiences: 

 - Platform SDK online documentation
 - Windows 2000 DDK online documentation
 - Windows NT 4.0 Resource Kit online documentation
 
The OEM Tools package of debugger tools has it's own documentation, 
userdocs.doc.  This document requires Microsoft Word to view.  In upcoming 
releases, this documentation will be integrated with the main debugger 
documentation.  

HTML Help Dependency

For the new debugger documentation, it is viewed using the HTML Help 
viewer.  HTML Help is installed on Windows 2000 and Windows 98, but is not 
installed on Windows 95 and Windows NT 4.0.  If you are using an older 
operating system which does not have HTML Help installed, you can install 
HTML Help from the HTML Help web site, 
<http://msdn.microsoft.com/workshop/author/htmlhelp/download.asp>.  If you 
install these debugger tools via the Windows 2000 DDK or Platform SDK, 
these setup programs will install HTML Help if necessary.  

-----------------------------------------------------------------------------

OEM Support Tools

Windows NT OEM Support Tools version 2.02D
(Windows 2000 Debugging Tools release)

ftp://ftp.microsoft.com/bussys/winnt/winnt-public/tools/OEMSupportTools is 
the official repository for the Windows NT OEM Support Tools.  The 
versions included here correspond to the "Phase 2 Service Release 1" tools 
on the ftp site.  Only x86 NT4 versions are included here, except for User 
Mode Process Dump, which supports Windows 2000.  Please check the ftp site 
for more information and to check for later versions of the tools, 
including versions which support Windows 2000.  

This is an abbreviated version of the OEM Support Tools release notes from
the ftp site.

Kernel Memory Space Analyzer
----------------------------

Below are the list of director plug-ins supplied with this release.
You can customize template kanalyze.ini to enable/disable these
plug-ins.

  RESULT   - Displays all anomaly items and their related items.
  DISP     - Displays all items in sorted order by type name.
  VIEWCMD  - Allows users to interactively view stored items.
  DRIVERS  - Displays a list of loaded drivers.
  DUMPINFO - Displays StopCode, registers, etc.
  IOVIEW   - Displays IRPs, device queues.
  OBJVIEW  - Displays object trees, per process handle tables.
  POOLVIEW - Displays usage of pool pages, pool blocks.
  PSVIEW   - Displays a list of processes, threads.
  STVIEW   - Displays stack traces per thread.
  VMVIEW   - Displays virtual memory layout, usage of memory.

These are described in more detail in the user documentation.

For plug-in developers, the kanalyze header files
( <SDKROOT>\samples\winbase\debug\kanalyze\inc,
  <DDKROOT>\src\debugging\kanalyze\inc,
  <DBG or DBGPLUS ROOT>\src\debugging\kanalyze\inc )

required for developing director plug-ins. Sample source files are also
included in the kanalyze\plugins directory.

Known issues and restrictions
-----------------------------

1) Kernel Debugger Extensions

  - When address to interrupt routine displayed by !idt command is lower than
    0x80000000, symbol information associated with the address is not valid
    and should be ignored.

  - The offset of following structure members displayed by !strct command is
    wrong.

    + "Queue" in "DEVICE_OBJECT"
    + "u"     in "MCA_EXCEPTION"

  - Below are the restrictions regarding !strct user-defined structure ini file.

    + The maximum number of structures which can be defined in one ini file is
      limited to 256. If there are more than 256 structures defined in
      [struct] section, only first 256 structures will be loaded and the rest
      will be ignored. If you want to define more than 256 structures, the ini
      file should be separated into multiple files.

    + The maximum number of structure definition files which can be defined in
      structdb.ini file is limited to 256. If there are more than 256 ini
      files defined in the [StructDbList] section, only first 256 files will be
      loaded and the rest will be ignored.

    + In ini file, if the type of structure's member is defined as enum or
      bitfield, "count" item must be 1. That means array of enum/bitfield is
      not supported. If array of enum/bitfield is defined, only first entry in
      the array is displayed with corresponding name.

    + !strct command sometimes displays a wrong size of loaded struct loaded
      from ini file. Currently kernel debugger extension calculates the size of
      loaded struct by the sum of the offset of last member and the size of last
      member. However if alignment rule is adapted by compiler, the calculated
      size is wrong.

    + If anonymous struct/union member is defined in ini file and loaded,
      !strct command displays a data type like

        " <parent structure name>CHILD<3 figures hex numbers>"

      when such struct/union member is specified by the command.
      This is a temporary name named by kernel debugger extension.
      This is by design and not a bug. Such temporary name cannot be
      specified by !strct or !list command directly.

      e.g.)
      +000a    Flags
      +000c    Block( RTL_HEAP_WALK_ENTRY_CHILD000 struct)
      +000c      Settable
      +0010      TagIndex
      +0012      AllocatorBackTraceIndex
      +0014      Reserved
      +000c    Segment( RTL_HEAP_WALK_ENTRY_CHILD001 struct)
      +000c      CommittedSize

      Also note that the maximum number of anonymous struct union type in one
      structure is 4096.

    + If anonymous member like struct union is defined in ini file and loaded,
      !strct command displays a member name like

        " anonymous<3 figures hex numbers>"

      when such members is specified by the command.
      This is a temporary name named by kernel debugger extension.
      This is by design and not a bug. Such temporary name cannot be specified
      by !strct, !list, or !singlelist command directly.

      e.g.)
      +00d8      array =                0073 005c 0041
      +00dc      anonymous000( X3452_CHILD000 struct)
      +00dc      a =                    A                   41
      +00e0      b =                    0070

      Also note that the maximum number of anonymous struct union members in
      one structure is 4096.

    + "!strct load" and "!strct unload" commands don't work with i386kd.exe and
      alphakd.exe. To use user-defined structure feature with
      i386kd.exe/alphakd.exe, structdb.ini must be placed in the same
      directory as kdex2x86.dll/kdex2alp.dll. Then user-defined
      structures must be defined in the ini files listed in structdb.ini.

2) Kernel Memory Space Analyzer

  - The module plug-in may identify anomalies in the following functions of
    ntoskrnl.exe and hal.dll. This is expected behavior; you can ignore them.

    + KeFlushCurrentTb function in ntoskrnl.exe
    + HalpRealModeStart and HalSetTimeIncrement functions in hal.dll

  - There are following known issues in STRACE plug-in if NMI(KiTrap02) or
    Double-fault(KiTrap08) found in a dump file.

    + Cannot locate switched stack.
    + Cannot locate stack frame for the stack before switched.
    + Can locate stack frame for the switched stack but includes some wrong
      data.

    Due to above problems, output from STVIEW, DUMPINFO, and stack item
    descriptions sometimes include wrong information in NMI and double-fault
    cases.

  - EXECUTIVEOBJECT plug-in reports the following anomaly if a process has been
    attached to by a debugger. This can be ignored.

      EPROCESS @f9cc24c0
      CreateProcessReported is anomalous.
      This value must be false

  - Following are notes for plug-in developers who uses helper routines and
    method interfaces.

    + Newline codes for a string returned by GetDataItemDescription are
      CR+LF. If you use stream output functions like printf to print this
      string, new line codes might get converted to CR+CR+LF.
      If you want to output a string returned by GetDataItemDescription,
      use binary mode or output without using stream output functions.

    + If data item specified by GetDataItemDescription or CallMethodRoutine
      is located in paged out area, these functions may return ERROR_READ_FAULT.

3) User Mode Process Dump

  - Smss.exe is not a Win32 process and the user mode process dump features do
    not work on it. This is by design.

-----------------------------------------------------------------------------

More Information

For more information on debugging, see the Windows 2000 Debugger Resources
web page, <http://www.microsoft.com/hwdev/driver/ntdebugging.htm>.

Please encourage people to go get the new debugger off the web "often", as 
we will do lots of fixes, while keeping compatibility with NT 4 and NT 5.  
Fixes to come are much better support for user mode and mini dumps.  

-----------------------------------------------------------------------------

Feedback

We are interested in your feedback on these debugger tools.  Please mail
suggestions or bug reports to windbgfb@microsoft.com.  This is not a
support alias, but your feedback will help us to plan future changes for
these tools and will make them more useful to you in the future.

-----------------------------------------------------------------------------

<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>testcap</TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY TEXT="#000000" LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff" leftmargin="8">

<FONT FACE="Verdana"><H2><A NAME="MYSAMPLE">Testcap –</A> A WDM Streaming Video Capture Driver which requires no Hardware</H2>
<H3>SUMMARY</H3>
</FONT><FONT FACE="Verdana" SIZE=2><P>Testcap is a prototypical sample WDM stream class video capture driver which does not require any hardware for operation. The driver simulates the front-end components of a PC/TV, including input selection, TvTuning, TvAudio control, and finally, digital video streaming. </P>
<P>The TvTuner component supports tuning modes of Analog TV (NTSC/PAL/SECAM), AM/FM Radio, as well as ATSC (American Broadcast Digital Television).</P>
<P>Testcap manifests itself in a DirectShow graph as four separate filters:</P>

<UL>
<LI>Testcap Capture </LI>
<LI>Testcap TvTuner </LI>
<LI>Testcap TVAudio </LI>
<LI>Testcap Crossbar</LI></UL>

<P>The capture portion produces two output streams, Capture and Preview which produce a variety of colorbars and grayscale patterns depending on the video input selected on the crossbar. The capture and preview streams contain video samples in either RGB24 or YUV422 color spaces and offer a large number of different image dimensions.</P>
<P>This driver contains sample implementations for almost all of the property sets involved in WDM video capture. Since Testcap doesn't control actual hardware, most of the property set implementations are useful only as prototypes which you can borrow for your own implementations. This driver represents one extreme of combining all functionality representing the front end of a PC/TV into a single driver. The other extreme is to create a separate driver each element: TvTuner, TvAudio, Crossbar, and Capture. </P>
<B><P>Keywords</B>: Video capture, WDM, stream class, TvTuner, driver.</P>
</FONT><FONT FACE="Verdana"><H3>BUILDING THE SAMPLE</H3>
<P><! ---------------- Snip Snip ---------------- ></FONT><FONT FACE="Verdana" SIZE=2>The sample is built with the standard DDK BUILD utility in the standard checked or free DDK build environment. Testcap is completely contained in one directory.  The resulting binary from the build process is Testcap.sys, which is compatible on x86 and Alpha platforms.</P>
<P>Testcap is not a PnP driver, since no hardware is involved, and it must be installed manually:</P>

<UL>
<LI>My Computer.Properties.Hardware.Hardware Wizard.Add new hardware. </LI>
<LI>"To install hardware which is not Plug and Play compatible, click Next." </LI>
<LI>"No, I want to select the hardware from a list." </LI>
<LI>"What type of hardware do you want to install" </LI>
<LI>Sound, Video, and Game Controllers </LI>
<LI>"Have Disk…" </LI>
<LI>Browse to find "Testcap.inf" </LI>
<LI>Browse to find "Testcap.sys" when requested</LI></UL>

<P><! ---------------- Snip Snip ---------------- ></P>
</FONT><FONT FACE="Verdana"><H3>RESOURCES</H3>
</FONT><FONT FACE="Verdana" SIZE=2><P>This driver has been tested with the following applicatons: Graphedt.exe, AMCap.exe, WebTV for Windows.</P>
<P>This website contains general information on driver and hardware development:</P><DIR>
<DIR>

</FONT><P><A HREF="http://www.microsoft.com/hwdev">http://www.microsoft.com/hwdev</A><FONT FACE="Verdana" SIZE=2> </P></DIR>
</DIR>

<P>This website contains information on DirectShow:</P><DIR>
<DIR>

</FONT><P><A HREF="http://www.microsoft.com/directx">http://www.microsoft.com/directx</A> </P>
<FONT FACE="Verdana"><H3>&nbsp;</H3></DIR>
</DIR>

<H3>CODE TOUR</H3>
<H4>File Manifest</H4>
</FONT><U><PRE>File&#9;&#9;Description
</U>Testcap.htm&#9;The Sample Tour documentation for this sample (this file).
<FONT FACE="Courier">SOURCES&#9;&#9;The generic file for building the code sample.
Testcap.inf&#9;A sample installation file.
CapStrm.h&#9;Declarations of streams and formats supported by the driver.
CapMain.c&#9;DriverEntry(), initialize, un-initialize, and adapter SRB processing.
CapMain.h&#9;Header file for above.
CapVideo.c&#9;Stream SRB processing.
CapVideo.h&#9;Header file for above.
CapXfer.c&#9;Synthesizes images.
CapXfer.h&#9;Header file for above.
CapIRQ.c&#9;Sample IRQ routines. 
CapProp.c&#9;Process all adapter property sets including TvTuner, Crossbar, VideoProcAmp, and CameraControl properties.
CapProp.h&#9;Header file for above.
DDraw.c&#9;&#9;Sample functions for handling kernel DDraw interfaces.  Not actually used by this driver at present.
Mediums.h&#9;Describes topological connections for the streams.
Testcap.rc&#9;Resource file mainly for version
</FONT><FONT FACE="Verdana"> </PRE>
</FONT><H4>Programming Tour</H4>
<FONT FACE="Verdana" SIZE=2><P>DriverEntry() is the initial point of entry for the driver. It initializes the hardware initialization structure and registers the secondary entry point functions. </P>
<P>HwReceivePacket field describes the entry point for receiving SRBs (Stream Request Packet) from stream class driver. Here is a possible sequence of SRBs that this driver may receive.</P>
<OL>

<LI>SRB_INITIALIZE_DEVICE to initialize the device, and called after DriverEntry().</LI>
<LI>SRB_GET_STREAM_INFO to get supported stream format.</LI>
<LI>SRB_GET_DATA_INTERSECTION to query a supported format given some key fields.</LI>
<LI>SRB_OPEN_STREAM to open a stream with supply format from SRB_GET_DATA_INTERSECTION. Two additional entry point functions are register for this stream for controlling the streaming state (Srb-&gt;StreamObject-&gt;ReceiveControlPacket) and for streaming data (Srb-&gt;StreamObject-&gt;ReceiveDataPacket). </LI>
<LI>SRB_CLOSE_STREAM to close the open stream.</LI>
<LI>SRB_UNINITIALIZE_DEVICE to indicate that a device has been unloaded or removed.</LI></OL>

<P>This driver also register entry points for canceling packets (HwCancelPacket) and for notifying if a packet has timeout (HwRequestTimeoutHandler). </P>
<B><P>Clocks</P>
</B><P>Testcap, like most video capture drivers, does not act as clock source for a filter graph. </P>
<B><P>Frame rate and dropped frames</P>
</B><P>Digital cameras support discrete frame rates; however, a client application can request to stream at any rate. It is required by WDM video capture driver to either match or select the next lower frame rate available. Over sampling can cause synchronization problems. </P>
<P>The dropped frame information is calculated instead of actual count, and it is based on the capture rate and the actual counts of frames captured. </P>
<P>&nbsp;<B>Work items</P>
</B><P>Testcap is not persisting TvTuner, Crossbar, VideoProcAmp and CameraControl property settings between reboots. For an example of how this should be handled, look at the 1394 digital video conferencing camera driver (1394dcam, capprop.c), also in this DDK.</P>
</FONT><P ALIGN="CENTER"><A HREF="#top"><FONT FACE="Verdana" SIZE=2>Top of page</FONT></A><FONT FACE="Verdana" SIZE=2> </P></FONT>
<TABLE CELLSPACING=0 BORDER=0 WIDTH=624>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#00ffff" HEIGHT=2>
<P></TD>
</TR>
</TABLE>

<FONT FACE="MS Sans Serif" SIZE=1><P>&copy; 1998 Microsoft Corporation</FONT><FONT FACE="Verdana" SIZE=2> </P></FONT></BODY>
</HTML>
